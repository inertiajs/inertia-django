[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "inertia-django"
version = "1.2.0"
description = "Django adapter for the InertiaJS framework"
authors = [{name="Brandon Shar", email="brandon@bellawatt.com"}]
license = "MIT"
requires-python = ">=3.9"
readme = "README.md"
repository = "https://github.com/inertiajs/inertia-django"
homepage = "https://github.com/inertiajs/inertia-django"
keywords = ["inertia", "inertiajs", "django"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Django :: 4",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "django>=4",
    "requests>=2",
]

[tool.poetry]
packages = [
  { include = "inertia" },
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
pytest-django = "^4.10.0"
ruff = "^0.11.2"

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort
]
ignore = ["E501"] # line too long, formatter will handle this
unfixable = ["B", "SIM"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "inertia.tests.settings"
django_find_project = false
