[tool.poetry]
name = "inertia-django"
version = "1.2.0"
description = "Django adapter for the InertiaJS framework"
authors = ["Brandon Shar <brandon@bellawatt.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/inertiajs/inertia-django"
homepage = "https://github.com/inertiajs/inertia-django"
keywords = ["inertia", "inertiajs", "django"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Django :: 4",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
  { include = "inertia" },
]

[tool.poetry.dependencies]
python = "^3.8"
django = ">=4"
requests = "^2"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-django = "^4.5.2"
ruff = "^0.8.6"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort
]
ignore = ["E501"] # line too long, formatter will handle this
unfixable = ["B", "SIM"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "inertia.tests.settings"
django_find_project = false
